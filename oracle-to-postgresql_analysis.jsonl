{"file_path": "input_src/.DS_Store", "sql_statements": [], "scanned": true}
{"file_path": "input_src/asp/example1.asp", "sql_statements": ["select * from EMP  where dept_no = \" & deptno & \" and dept_code ='\" & _ ucase(replace(code,\"'\",\"''\")) & \"'\"", "insert into EMP_ACTIVITY  values('\" & replace(code,\"'\",\"''\") & \"','\" & _ replace(description,\"'\",\"''\") & \"',to_date('\" & formatdatetime(Now(),2) & _ \"','mm/dd/yyyy'),'open','\" & replace(associated_bu,\"'\",\"''\") & \"',null)\"", "insert into EMP_ACTIVITY  values('\" & replace(code,\"'\",\"''\") & \"','\" & _ replace(description,\"'\",\"''\") & \"',to_date('\" & formatdatetime(Now(),2) & _ \"','mm/dd/yyyy'),'open','',null)\""], "scanned": true}
{"file_path": "input_src/resources/example1.properties", "sql_statements": ["select * from sh.sales s", "SELECT cust_last_name, cust_credit_limit, cust_year_of_birth FROM   sh.customers WHERE  cust_state_province='Noord-Holland' AND  cust_year_of_birth > add_months(sysdate,-12) ORDER BY cust_year_of_birth", "select sysdate from dual", "update sh.customers set cust_credit_limit = cust_credit_limit + 100 where cust_id = 23452", "update sh.customers set cust_credit_limit = cust_credit_limit + 100 where cust_id = 23452"], "scanned": true}
{"file_path": "input_src/resources/.DS_Store", "sql_statements": [], "scanned": true}
{"file_path": "input_src/resources/example1.xml", "sql_statements": ["select * from sh.sales s", "SELECT cust_last_name, cust_credit_limit, cust_year_of_birth FROM   sh.customers WHERE  cust_state_province='Noord-Holland' AND  cust_year_of_birth > add_months(sysdate,-12) ORDER BY cust_year_of_birth", "select sysdate from dual", "update sh.customers set cust_credit_limit = cust_credit_limit + 100 where cust_id = 23452"], "scanned": true}
{"file_path": "input_src/resources/mybatis1.xml", "sql_statements": ["select p.id as prod_id, p.prod_desc, c.id as cust_id, c.city, c.name as cust_name, c.state, f.id as fact_id, f.qty_sold, f.amount_sold from fact f inner join products p on p.id = f.prod_id inner join customers c on c.id = f.cust_id where f.id = #{id}", "{call getSomething(#{id,jdbcType=INTEGER,mode=IN}, #{flag,javaType=int,mode=IN})}", "INSERT INTO FOO (ID, ID_DESC) VALUES (#{id}, #{id_desc})", "INSERT INTO foo (id, id_desc) VALUES (#{id,jdbcType=NUMERIC,numericScale=0}, #{id_desc,javaType=int})"], "scanned": true}
{"file_path": "input_src/resources/sql/example1.sql", "sql_statements": ["SELECT cust_last_name, cust_credit_limit, cust_year_of_birth FROM   sh.customers WHERE  cust_state_province='Noord-Holland' AND  cust_year_of_birth > add_months(sysdate,-12) ORDER BY cust_year_of_birth"], "scanned": true}
{"file_path": "input_src/resources/sql/example3.sql", "sql_statements": ["SELECT cust_last_name, cust_credit_limit, cust_year_of_birth FROM   sh.customers WHERE  cust_state_province='Noord-Holland' AND  cust_year_of_birth > add_months(sysdate,-12) ORDER BY cust_year_of_birth"], "scanned": true}
{"file_path": "input_src/resources/sql/example2.sql", "sql_statements": ["SELECT cust_last_name, cust_credit_limit, cust_year_of_birth FROM   sh.customers WHERE  cust_state_province='Noord-Holland' AND  cust_year_of_birth > add_months(sysdate,-12) ORDER BY cust_year_of_birth"], "scanned": true}
{"file_path": "input_src/cs/odp_OracleCommand_binds_example.cs", "sql_statements": ["SELECT SUBSTR(channel_desc, 1, 30) AS channel_desc FROM channels WHERE channel_id = :channel_id"], "scanned": true}
{"file_path": "input_src/cs/example1.cs", "sql_statements": ["select count(*) from EMP where empno = @0", "select * from EMP where last_name || first_name = @0", "select * from EMP order by last_name, first_name", "select * from EMP where UpdateDate >= @0 order by last_name, first_name", "select * from EMP where StartDate <= @0 and EndDate >= @0 order by last_name, first_name"], "scanned": true}
{"file_path": "input_src/cs/odp_OracleDataAdapter_example.cs", "sql_statements": ["SELECT promo_id AS id, promo_name AS name,  promo_category AS category, promo_cost AS cost  FROM promotions  WHERE promo_begin_date > TRUNC(SYSDATE, 'YEAR')"], "scanned": true}
{"file_path": "input_src/cs/ado_OracleCommand_example.cs", "sql_statements": ["SELECT channel_id, channel_desc FROM channels WHERE ROWNUM <= 5 ORDER BY channel_id"], "scanned": true}
{"file_path": "input_src/cs/PetaPoco_examples.cs", "sql_statements": ["select count(*) from EMP where empno = @0", "select * from EMP where last_name || first_name = @0", "select * from EMP order by last_name, first_name", "select * from EMP where UpdateDate >= @0 order by last_name, first_name", "SELECT * FROM emp WHERE dept_id = @0", "SELECT * FROM emp WHERE dept_id = @0", "select * from EMP where StartDate <= @0 and EndDate >= @0 order by last_name, first_name"], "scanned": true}
{"file_path": "input_src/java/example4.java", "sql_statements": ["drop table basic_lob_table", "create table basic_lob_table (x varchar2 (30), b blob, c clob)", "insert into basic_lob_table values ('one', '010101010101010101010101010101', 'onetwothreefour')", "insert into basic_lob_table values ('two', '0202020202020202020202020202', 'twothreefourfivesix')", "select * from basic_lob_table for update", "select * from basic_lob_table"], "scanned": true}
{"file_path": "input_src/java/example5.java", "sql_statements": ["drop table streamexample", "create table streamexample (NAME varchar2 (256), DATA long)", "insert into streamexample (data, name) values (?, ?)", "select DATA from streamexample where NAME='StreamExample'"], "scanned": true}
{"file_path": "input_src/java/example2.java", "sql_statements": ["delete from EMP where EMPNO = 1500 and HIRE_DATE > (sysdate-365)", "delete from EMP where EMPNO = 507", "insert into EMP (EMPNO, ENAME) values (?, ?)"], "scanned": true}
{"file_path": "input_src/java/stmt_statuses.java", "sql_statements": ["SELECT SALES_ORDER_ID, LAST_UPDT_USER_ID, to_char(LAST_UPDT_TS, 'YYYY-MM-DD HH24:MI:SS') FROM SALES_ORDER ORDER BY sales_order_id", "SELECT SALES_ORDER_ID, LAST_UPDT_USER_ID, to_char(LAST_UPDT_TS, 'YYYY-MM-DD HH24:MI:SS') FROM SALES_ORDER ORDER BY sales_order_id", "example.MYSQLSTATEMENT"], "scanned": true}
{"file_path": "input_src/java/example3.java", "sql_statements": ["create or replace function RAISESAL (name CHAR, raise NUMBER) return NUMBER is begin return raise + 100000; end;", "{? = call RAISESAL (?, ?)}"], "scanned": true}
{"file_path": "input_src/java/example1.java", "sql_statements": ["select last_name || ',' || first_name as ENAME from EMP order by last_name, first_name"], "scanned": true}
{"file_path": "input_src/java/example6.java", "sql_statements": ["select <str1>, <SELECT_WITH_GROUP_BY_STMT> group by <str1> order by cnt desc"], "scanned": true}
{"file_path": "input_src/java/example7.java", "sql_statements": ["select * from users where name = #{name} <if test=\"age != null\"> age = #{age} </if>", "select count(*) from users where name = #{name}"], "scanned": true}
{"file_path": "input_src/java_1252/example1.java", "sql_statements": ["select ENAME from EMP"], "scanned": true}
